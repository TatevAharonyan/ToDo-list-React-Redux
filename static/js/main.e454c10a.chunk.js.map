{"version":3,"sources":["todo/TodoForm.js","todo/TodoList.js","Tasks.js","App.js","reportWebVitals.js","reducers/reducer.js","index.js"],"names":["TodoForm","useState","text","setText","onSubmit","e","preventDefault","store","dispatch","type","payload","className","typr","value","onChange","target","TodoList","getState","map","todo","check","onClick","id","style","color","Tasks","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","Math","random","createStore","state","action","item","filter","render","ReactDOM","document","getElementById","subscribe"],"mappings":"+OA6BeA,MA1Bf,WACI,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAeA,OACI,uBAAMC,SAVS,SAAAC,GACfA,EAAEC,iBACW,KAATJ,IACAG,EAAEC,iBACFC,EAAMC,SAAS,CAAEC,KAAM,WAAYC,QAASR,IAC5CC,EAAQ,MAKgBQ,UAAU,OAAtC,UACI,uBACIC,KAAK,OAAOC,MAAOX,EACnBY,SAjBY,SAAAT,GACpBF,EAAQE,EAAEU,OAAOF,UAkBb,wBAAQJ,KAAK,SAAb,uBCcGO,EApCE,SAAC,GAAa,EAAXd,KACCK,EAAMU,WAGvB,OACI,qBAAKN,UAAU,OAAf,SAGQJ,EAAMU,WAAWC,KAAI,SAACC,GAClB,OACI,sBACCR,UAAWQ,EAAKC,MAAQ,YAAc,aADvC,UAGI,qBAAKT,UAAWQ,EAAKC,MAAQ,aAAe,cAE5CC,QAAY,kBAAMd,EAAMC,SAAS,CAACC,KAAM,aAAcC,QAASS,EAAKG,QAIhE,qBAAKC,MAAO,CAAEC,MAAM,GAAD,OAAKL,EAAKC,MAAQ,UAAY,gBAAjD,SACI,kCAAKD,EAAKjB,KAAV,SAER,qBAAKS,UAAU,cAAcU,QAAS,kBAAMd,EAAMC,SAAS,CAAEC,KAAM,cAAeC,QAASS,EAAKG,MAAhG,iBAZOH,EAAKG,UCLzBG,G,MARD,WACV,OACI,qBAAKd,UAAY,SAAjB,SACK,0CCuBEe,MAjBf,WAIE,OAEE,qBAAKf,UAAU,MAAf,SACE,sBAAKW,GAAG,YAAR,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCPOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBCPPQ,EACF,CACG,CAACd,GAAIe,KAAKC,SACVpC,KAAK,sBACLkB,OAAO,GACT,CACEE,GAAKe,KAAKC,SACVpC,KAAM,gBACNkB,OAAO,GACR,CACCE,GAAKe,KAAKC,SACVpC,KAAM,oBACNkB,OAAO,GACP,CACAE,GAAKe,KAAKC,SACVpC,KAAM,gBACNkB,OAAO,ICRFb,EAAQgC,aDYE,WAAqC,IAApCC,EAAmC,uDAA1BJ,EAAcK,EAAY,uCACvD,OAAQA,EAAOhC,MACX,IAAK,WACD,MAAM,CACD,CACGa,GAAKe,KAAKC,SACVpC,KAAMuC,EAAO/B,QACbU,OAAO,IAJf,mBAMOoB,IAEX,IAAK,aACD,OAAOA,EAAMtB,KAAI,SAAAwB,GAAI,OAAIA,EAAKpB,KAAOmB,EAAO/B,QAAnB,2BACbgC,GADa,IACPtB,OAAQsB,EAAKtB,QAAQsB,KAC3C,IAAK,cACD,OAAOF,EAAMG,QAAO,SAAAD,GAAI,OAAIA,EAAKpB,KAAOmB,EAAO/B,WAEnD,QACI,OAAO8B,MC5BbI,EAAS,kBAAMC,IAASD,OAAQ,cAAC,EAAD,IAASE,SAASC,eAAe,UACvEH,IACArC,EAAMyC,UAAUJ,GAGhBjB,M","file":"static/js/main.e454c10a.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { store } from \"./../index\";\r\n\r\nfunction TodoForm() {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const changeInputText = e => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const formSubmit = e => {\r\n        e.preventDefault();\r\n        if (text !== \"\") {\r\n            e.preventDefault();\r\n            store.dispatch({ type: \"ADD_TODO\", payload: text })\r\n            setText(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formSubmit} className=\"form\" >\r\n            <input\r\n                typr=\"text\" value={text}\r\n                onChange={changeInputText}\r\n            />\r\n            <button type=\"submit\"> Add </button>\r\n        </form>\r\n    )\r\n}\r\nexport default TodoForm;","import { store } from \"./../index\";\r\n\r\n\r\nconst TodoList = ({ text }) => {\r\n    const todoList = store.getState();\r\n    \r\n\r\n    return (\r\n        <div className=\"list\" >\r\n\r\n            {\r\n                store.getState().map((todo) => {\r\n                    return (\r\n                        <div  key={todo.id}\r\n                         className={todo.check ? \"item_true\" : \"item_false\"} >\r\n\r\n                            <div className={todo.check ? \"check_true\" : \"check_false\"} \r\n                           \r\n                            onClick = { () => store.dispatch({type: \"CHECK_TODO\", payload: todo.id})}\r\n                            >\r\n\r\n                            </div>\r\n                                <del style={{ color: `${todo.check ? \"#00ff21\" : \"transparent\" }` }}>\r\n                                    <p> {todo.text} </p>\r\n                                </del>\r\n                            <div className=\"delete_item\" onClick={() => store.dispatch({ type: \"REMOVE_TODO\", payload: todo.id })}>\r\n                                X\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","const Tasks = () => {\r\n    return (\r\n        <div className = \"header\">\r\n             <p>Tasks</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;","import { useState } from \"react\";\nimport TodoForm from \"./todo/TodoForm\";\nimport TodoList from \"./todo/TodoList\";\nimport './App.css';\nimport { store } from \"./index\";\nimport Tasks from \"./Tasks\";\n\n\n\nfunction App() {\n\n\n\n  return (\n\n    <div className=\"App\" >\n      <div id=\"container\" >\n        <Tasks />\n        <TodoList />\n        <TodoForm />\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const  initialState = \r\n     [\r\n        {id: Math.random(),\r\n        text:\"Prepare for Session\",\r\n        check: false,\r\n    },{ \r\n        id:  Math.random(),\r\n        text: \"Assign Tascks\",\r\n        check: false,\r\n    }, {\r\n        id:  Math.random(),\r\n        text: \"Bee there on time\",\r\n        check: false,\r\n    } , {\r\n        id:  Math.random(),\r\n        text: \"Start Session\",\r\n        check: false,\r\n    }];\r\n\r\n \r\nexport const reducer = (state  = initialState, action) =>  {\r\n    switch( action.type ){\r\n        case \"ADD_TODO\":\r\n            return [\r\n                 {\r\n                    id:  Math.random(),\r\n                    text: action.payload,\r\n                    check: false,\r\n                  } ,\r\n                ...state,                  \r\n            ];\r\n        case \"CHECK_TODO\":\r\n            return state.map(item => item.id === action.payload? \r\n                    {...item, check: !item.check}: item );\r\n        case \"REMOVE_TODO\":\r\n            return state.filter(item => item.id !== action.payload );\r\n         \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, combineReducers} from \"redux\";\nimport {reducer} from \"./reducers/reducer\"\n\nexport const store = createStore (reducer);\n\nconst render = () => ReactDOM.render( <App />, document.getElementById('root') );\nrender ()\nstore.subscribe(render);\n\n\nreportWebVitals();\n"],"sourceRoot":""}